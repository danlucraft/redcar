#!/usr/bin/env ruby
$KCODE='U' unless RUBY_VERSION > "1.9.0"
$redcar_process_start_time = Time.now
$VERBOSE = ARGV.include? '--verbose'

file = __FILE__
file = File.readlink(file) while File.symlink?(file)

$LOAD_PATH.unshift File.expand_path('../../lib', file)

require "redcar_quick_start"
if ARGV.include? '--silent'
  # reopen the standard pipes to nothingness if we were forked as part of jruby
  STDIN.reopen Redcar.null_device
  STDOUT.reopen Redcar.null_device, 'a'
  STDERR.reopen STDOUT
end

SWT_APP_NAME = "Redcar"
Redcar.read_stdin
exit if Redcar.try_to_load_via_drb
require 'redcar'
Redcar.environment = :user
Redcar.ensure_user_dir_config
Redcar.log.info("REDCAR #{Redcar::VERSION} start (start time was #{Redcar.process_start_time})")
Redcar.spin_up
Redcar.load_threaded
Redcar.show_splash
Redcar.pump

# enforce a GC run to help with a clean exit.
# When mixing SWT and Swing this is necessary.
mem_bean = java.lang.management.ManagementFactory.getMemoryMXBean()
mem_bean.gc

